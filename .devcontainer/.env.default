# DEVCONTAINER ENVIRONMENT VARIABLES TEMPLATE
#
# This file provides a template for local devcontainer environment variables.
# These variables are used for LOCAL DEVELOPMENT ONLY.
#
# Docker Compose automatically loads .env files from the same directory:
# https://docs.docker.com/compose/how-tos/environment-variables/set-environment-variables/
#
# SETUP INSTRUCTIONS FOR LOCAL DEVELOPMENT:
#
# 1. Copy this file to create your local .env file:
#    cp .devcontainer/.env.default .devcontainer/.env
#
# 2. Edit .devcontainer/.env with your actual credentials (do not use placeholder values)
#
# 3. (Optional) Copy docker-compose override template for local customizations:
#    cp .devcontainer/docker-compose.override.yml.template .devcontainer/docker-compose.override.yml
#
# 4. Rebuild the devcontainer to apply the changes
#
# HOW IT WORKS - THE DOUBLE DECLARATION REQUIREMENT:
#
# Environment variables must be declared in TWO places to work:
#
# 1. IN THIS FILE (.env) - Provide the actual VALUES:
#    LANGSMITH_API_KEY=lsv2_sk_abc123...
#
# 2. IN docker-compose.yml - Declare in the environment: section:
#    environment:
#      LANGSMITH_API_KEY: ${LANGSMITH_API_KEY}
#
# WHY BOTH ARE NEEDED:
#
# - Docker Compose loads .env files for VARIABLE SUBSTITUTION only
# - The environment: section in docker-compose.yml determines which variables
#   are actually PASSED INTO THE CONTAINER
# - If a variable is in .env but NOT in environment:, it won't be available
#   in the container (even if you use env_file: in docker-compose.override.yml)
# - The ${VAR} syntax in environment: tells docker-compose to substitute the
#   value from .env
#
# ADDING NEW VARIABLES:
#
# To add a new environment variable:
# 1. Add the value here in .env
# 2. Add declaration in docker-compose.yml environment: section
# 3. Rebuild the devcontainer
#
# PRECEDENCE AND OVERRIDE STRATEGY:
#
# docker-compose.yml (base)
#   ↓ reads values from
# .env (values)
#   ↓ can be overridden by
# docker-compose.override.yml (local customizations)
#   ↓ results in
# Container environment variables
#
# For local overrides, add to docker-compose.override.yml environment: section
#
# CODESPACES SETUP:
#
# When using GitHub Codespaces, these environment variables are provided via
# Codespaces secrets instead of this file. Configure the following secrets in
# your GitHub repository settings:
#
# - GH_PAT (replaces GITHUB_PAT)
# - GH_USER (replaces GITHUB_USER)
# - GH_PROJECT_PAT (replaces GITHUB_PROJECT_PAT)
# - ANTHROPIC_API_KEY
# - LANGSMITH_API_KEY
# - LANGSMITH_ORGANIZATION_ID
# - LANGSMITH_WORKSPACE_ID
#
# The docker-compose.yml uses fallback syntax ${GITHUB_PAT:-${GH_PAT}} to support both.
#
# NOTE: Both .devcontainer/.env and .devcontainer/docker-compose.override.yml are
# gitignored and will NOT be committed to version control.

# GitHub Configuration
GITHUB_PAT=your_github_personal_access_token_here
GITHUB_USER=your_github_username
# for managing projects
GITHUB_PROJECT_PAT=your_github_project_personal_access_token_here

# Anthropic Configuration
AWS_ACCESS_KEY_ID=your_bedrock_api_key_here
AWS_SECRET_ACCESS_KEY=your_bedrock_api_secret_here
ANTHROPIC_MODEL=us.anthropic.claude-sonnet-4-5-20250929-v1:0
ANTHROPIC_SMALL_FAST_MODEL=us.anthropic.claude-haiku-4-5-20251001-v1:0
AWS_REGION=us-east-1
CLAUDE_CODE_USE_BEDROCK=1

# Claude Code Token Limits
# max_tokens must be greater than thinking.budget_tokens
# Recommended for Bedrock: MAX_OUTPUT=4096, THINKING=1024 (minimum)
# Increase if needed for complex tasks (e.g., 16k/8k)
# https://docs.claude.com/en/docs/build-with-claude/extended-thinking
CLAUDE_CODE_MAX_OUTPUT_TOKENS=4096
MAX_THINKING_TOKENS=1024

# LangSmith Configuration
LANGSMITH_API_KEY=your_langsmith_api_key_here

# Organization and Workspace Scoping (optional)
# Set these to scope operations to a specific organization or workspace
# When set, operations default to private prompts only
# Workspace ID provides narrower scoping than organization ID
LANGSMITH_ORGANIZATION_NAME=your_organization_name_here
LANGSMITH_ORGANIZATION_ID=your_organization_id_here
LANGSMITH_WORKSPACE_NAME=your_workspace_name_here
LANGSMITH_WORKSPACE_ID=your_workspace_id_here